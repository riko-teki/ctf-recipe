# This is a basic workflow to help you get started with Actions

name: Build React on lightsail

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master  # リポジトリをチェックアウト

      - name: Install AWS Client
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
      
      - name: Install lightsail control prugin
        run: |
          curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "/usr/local/bin/lightsailctl"
          sudo chmod +x /usr/local/bin/lightsailctl

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Install Dependencies
        run: npm install

      - name: Build React application
        run: npm run build  # React ビルド

      - name: Build Docker Image
        run: |
          docker build -t ctf-recipe:latest -f dockerfile.deploy .

      - name: Push image
        run: |
          service_name=ctf-recipe
          aws lightsail push-container-image \
            --region ap-northeast-1 \
            --service-name ${service_name} \
            --label web \
            --image ctf-recipe:latest
      
      - name: Install utility for JSON
        run: sudo apt-get install -y jq
      
      - name: Deploy Container
        run: |
          service_name=ctf-recipe
          echo $(cat continer.json)
          image=$(aws lightsail get-container-images --service-name ${service_name} | jq --raw-output ".containerImages[0].image")
          cat container.json | jq --arg image $image '.containers.KeyName.image|=$image' > container.json


      
